<?xml version="1.0" encoding="UTF-8"?><testrun name="src" project="FreeCol" tests="1728" started="51" failures="0" errors="0" ignored="0">
  <testsuite name="net.sf.freecol.server.ai.TensionTest" incomplete="true">
    <testcase name="testTension" classname="net.sf.freecol.server.ai.TensionTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.mission.ScoutingMissionTest" incomplete="true">
    <testcase name="testHorsesLost" classname="net.sf.freecol.server.ai.mission.ScoutingMissionTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.TileImprovementTest" incomplete="true">
    <testcase name="testRiverWithExtras" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
    <testcase name="testRiverNoExtras" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
    <testcase name="testAllFrills" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
    <testcase name="testOldStyle" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
    <testcase name="testEquality" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true">
    <testcase name="testGetNextStopAlreadyAtDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
    <testcase name="testGetDefaultDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
    <testcase name="testWagonTrain" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
    <testcase name="testGetNextStopIsColony" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
    <testcase name="testGetNextStopIsEurope" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
    <testcase name="testTransportMissionInvalidAfterCombatLost" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.ScopeTest" incomplete="true">
    <testcase name="testEmptyScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
    <testcase name="testMethodScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
    <testcase name="testCombinedScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
    <testcase name="testTypeScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
    <testcase name="testAbilityScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
    <testcase name="testEquality" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
    <testcase name="testMatchesNull" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
    <testcase name="testGameObjects" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.i18n.CLDRTest" incomplete="true">
    <testcase name="testRuleParsing" classname="net.sf.freecol.common.i18n.CLDRTest" incomplete="true"/>
    <testcase name="testPlurals" classname="net.sf.freecol.common.i18n.CLDRTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.client.gui.FontTest" incomplete="true">
    <testcase name="testLogicalSerif" classname="net.sf.freecol.client.gui.FontTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true">
    <testcase name="testPaine" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testBolivar" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testBrebeuf" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testStuyvesant" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testBrewster" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testCortes" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testDeWitt" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testJefferson" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testMinuit" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testRevere" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    <testcase name="testDeLasCasas" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.TileTest" incomplete="true">
    <testcase name="testTileTypeChangeProduction" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testDefenceModifiers" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testPrimarySecondaryGoods" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testPotential" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testCopy" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testImprovements" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testMinerals" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testMaximumPotential" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testIsTileTypeAllowed" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testGetWorkAmount" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testGetBestDisembarkTile" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testColonyImprovements" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testConiferForest" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testProductionModifiers" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    <testcase name="testZIndex" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.client.control" incomplete="true">
    <testsuite name="net.sf.freecol.client.control.MoveTest" incomplete="true">
      <testcase name="testSimpleMove" classname="net.sf.freecol.client.control.MoveTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true">
    <testcase name="testOtherBuildings" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testRainForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testHorseProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testSavannah" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testHills" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testMarsh" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testOcean" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testSwamp" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testCoatProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testLake" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testHighSeas" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testPrairie" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testWetlandForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testGrassland" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testBroadleafForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testCrossProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testGreatRiver" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testToolsProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testMixedForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testBorealForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testBellProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testClothProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testMountains" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testArctic" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testConiferForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testDesert" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testHammerProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testPlains" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testMusketProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testCigarProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testTundra" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testRumProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testTropicalForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    <testcase name="testScrubForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.SaveLoadTest" incomplete="true">
    <testcase name="testDelayedLoading" classname="net.sf.freecol.server.SaveLoadTest" incomplete="true"/>
    <testcase name="testImmediateLoading" classname="net.sf.freecol.server.SaveLoadTest" incomplete="true"/>
    <testcase name="testImport" classname="net.sf.freecol.server.SaveLoadTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.GameTest" incomplete="true">
    <testcase name="testGame" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
    <testcase name="testTurn" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
    <testcase name="testAddPlayer" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true">
    <testcase name="testNoHorsesOverProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
    <testcase name="testBellNetProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
    <testcase name="testProductionMap" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
    <testcase name="testProductionSoldier" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
    <testcase name="testConsumers" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
    <testcase name="testProductionPioneer" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
    <testcase name="testProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
    <testcase name="testGetPotentialProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.common.utils" incomplete="true">
    <testsuite name="net.sf.freecol.common.utils.UtilsTest" incomplete="true">
      <testcase name="testComparator" classname="net.sf.freecol.common.utils.UtilsTest" incomplete="true"/>
      <testcase name="testGetPermutations" classname="net.sf.freecol.common.utils.UtilsTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.i18n.MessagesTest" incomplete="true">
    <testcase name="testReplaceArbitraryTag" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testReplaceNumber" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testReplaceChoicesGrammar" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testMessageWithSpecialChars" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testReplaceGarbage" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testAbstractUnitDescription" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testChangeLocaleSettings" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testMessageString" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testNestedChoices" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testStringTemplates" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testReplaceChoicesPlural" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testUnitDescription" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    <testcase name="testREFMessages" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true">
    <testcase name="testIsTargetValidForSeekAndDestroy" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
    <testcase name="testImpossibleConditionsForTargetSelection" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
    <testcase name="testSecureIndianSettlementMissionIgnoreNavalThreat" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
    <testcase name="testSecureIndianSettlementMission" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
    <testcase name="testAssignDefendSettlementMission" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.GoodsContainerTest" incomplete="true">
    <testcase name="testContainer" classname="net.sf.freecol.common.model.GoodsContainerTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.server.generator" incomplete="true">
    <testsuite name="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true">
      <testcase name="testSinglePlayerOnSmallMap" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
      <testcase name="testImportMap" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
      <testcase name="testRegions" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
      <testcase name="testWithNoIndians" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
      <testcase name="testIndianCapital" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
      <testcase name="testMapGenerator" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.SerializationTest" incomplete="true">
    <testcase name="testMapAmerica" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
    <testcase name="testSpecification" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
    <testcase name="testValidation" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
    <testcase name="testStringTemplate" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
    <testcase name="testMapAfrica" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
    <testcase name="testMapCaribbean" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
    <testcase name="testDifficulty" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
    <testcase name="testGeneratedLists" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
    <testcase name="testMapAustralia" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.GoodsTest" incomplete="true">
    <testcase name="testGetTakeSpace" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testGetInputType" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testSetGetAmount" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testGoodsGameLocationIntInt" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testToString" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testBuildingMaterials" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testIsFarmedGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testGetName" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testGetOutputType" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testMilitaryGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testTradeGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testProductionChain" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testAdjustAmount" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    <testcase name="testSetOwner" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.NationTypeTest" incomplete="true">
    <testcase name="testSettlementType" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
    <testcase name="testIsREF" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
    <testcase name="testisRef" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
    <testcase name="testAdvantagesThatOnlyApplyToPersons" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
    <testcase name="testHasType" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
    <testcase name="testStartingUnits" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true">
    <testcase name="testMoveTeacherOutside" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testTeacherStoresProgress" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testCaseTwoTeachersWithDifferentExp" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testMoveTeacherInside" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testConcurrentUpgrade" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testTeachingOrder" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testTeachPettyCriminalsByMaster" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testTeachingDoublePromotion" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testUniversity" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testTwoTeachersSimple" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testTrackerBug1616384" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testSingleGuyTwoTeachers2" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testCollege" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testSingleGuyTwoTeachers" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testSonsOfLiberty" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testTwoTeachersOfSameKind" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testTeachPettyCriminals" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testProductionBonus" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testPartTraining" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testExpertTeaching" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testColonialRegular" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    <testcase name="testTeachIndenturedServants" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.server.control" incomplete="true">
    <testsuite name="net.sf.freecol.server.control.InGameControllerTest" incomplete="true">
      <testcase name="testWarDeclarationAffectsSettlementAlarm" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testArtilleryDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testPeaceTreatyFromWarStance" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testScoutDiesNotLosesEquipment" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testDragoonDemotedByBrave" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testCeaseFireTreaty" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testDeclarationOfWarFromPeace" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testAttackColonyWithVeteran" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testDragoonDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testAddFatherUnits" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testDumpGoods" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testAtackedNavalUnitIsDamaged" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testLaSalle" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testPocahontas" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testPioneerDiesNotLosesEquipment" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testPromotion" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testClearSpecialty" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testPeaceTreatyFromCeaseFireStance" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testUnitLosesExperienceWithWorkChange" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testEquipIndianNotEnoughReqGoods" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testCashInTreasure" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testAddFatherUpgrades" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testUnitTypeChangeOnEnterColony" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testSoldierDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testAttrition" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testUnarmedAttack" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testCarpenterHouseNationalAdvantage" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testCreateMission" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testDoAssignedWorkAmateurAndHardyPioneer" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testEmbark" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testVeteranSoldierDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testLoseColonyDefenceWithRevere" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testBuildingBonus" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testColonistDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testScoutDefeatedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testAddFatherBuildingEvent" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testAttackColonyWithBrave" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      <testcase name="testEquipIndian" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.SettlementTest" incomplete="true">
    <testcase name="testColonyClaimsWater" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
    <testcase name="testLineOfSight" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
    <testcase name="testSettlementRadius" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
    <testcase name="testCanImproveUnitMilitaryRole" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
    <testcase name="testSettlementDoesNotClaimWater" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
    <testcase name="testColonyRadius" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.ModifierTest" incomplete="true">
    <testcase name="testScope" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testCombinedModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testPercentageModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testHashEquals" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testAdditiveModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testTimeLimits" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testCombinePercentageModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testModifierUnknown" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testCombineMultiplicativeModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testMultiplicativeModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testIncrements" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    <testcase name="testCombineAdditiveModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.TradeRouteTest" incomplete="true">
    <testcase name="testTradeRoute" classname="net.sf.freecol.common.model.TradeRouteTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.MonarchTest" incomplete="true">
    <testcase name="testTaxActionChoices" classname="net.sf.freecol.common.model.MonarchTest" incomplete="true"/>
    <testcase name="testSerialize" classname="net.sf.freecol.common.model.MonarchTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.model.ServerUnitTest" incomplete="true">
    <testcase name="testDoAssignedWorkHardyPioneerPlowPlain" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
    <testcase name="testColonyProfitFromEnhancement" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
    <testcase name="testExposeResource" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
    <testcase name="testDoAssignedWorkHardyPioneerBuildRoad" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
    <testcase name="testUnitPromotionWorkingInWorkTile" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
    <testcase name="testUnitGetsExperienceThroughWork" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
    <testcase name="testUnitLumberDelivery" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
    <testcase name="testToggleHorses" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true">
    <testcase name="testCheckNoGameOverEnoughMoney" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testCheckGameOver1600Threshold" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testCheckNoGameOverHasColonistInNewWorld" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testHasExploredTile" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testBuyingMakesPricesRaise" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testCheckGameOverUnitsGoingToEurope" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testDutchMarket" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testCheckGameOverNoUnits" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testCheckGameOverUnitsGoingToNewWorld" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testSellingMakesPricesFall" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testMarketRecovery" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testLoadInColony" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    <testcase name="testLoadInEurope" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true">
    <testcase name="testSinglePlayerOnSmallMap" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
    <testcase name="testImportMap" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
    <testcase name="testRegions" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
    <testcase name="testWithNoIndians" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
    <testcase name="testIndianCapital" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
    <testcase name="testMapGenerator" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.ContactTest" incomplete="true">
    <testcase name="testNativeMeetsEuropean" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
    <testcase name="testNativeMeetsColony" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
    <testcase name="testShipMeetsShip" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
    <testcase name="testNativeMeetsNative" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
    <testcase name="testNativeMeetsIndianSettlement" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
    <testcase name="testEuropeanMeetsIndianSettlement" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
    <testcase name="testEuropeanMeetsNative" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.TileItemContainerTest" incomplete="true">
    <testcase name="testCopyFromWithEveryThing" classname="net.sf.freecol.common.model.TileItemContainerTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.PathfindingTest" incomplete="true">
    <testcase name="testComposedGoalDeciders" classname="net.sf.freecol.common.model.PathfindingTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.sound.SoundTest" incomplete="true">
    <testcase name="testSound" classname="net.sf.freecol.common.sound.SoundTest" incomplete="true"/>
    <testcase name="testClassic" classname="net.sf.freecol.common.sound.SoundTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true">
    <testcase name="testNavalUnitMoveToTileWithSettlement" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
    <testcase name="testInvalidMoveThroughTileWithSettlement" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
    <testcase name="testGetRemainingMovesAndNewTurn" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
    <testcase name="testGetCostLandLand" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
    <testcase name="testInvalidMoveOfLandUnitToAnOceanTile" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
    <testcase name="testInvalidMoveOfNavalUnitToALandTile" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.client.control.MoveTest" incomplete="true">
    <testcase name="testSimpleMove" classname="net.sf.freecol.client.control.MoveTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.common.option" incomplete="true">
    <testsuite name="net.sf.freecol.common.option.OptionTest" incomplete="true">
      <testcase name="testGameOptions" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
      <testcase name="testUnitListOption" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
      <testcase name="testInheritsEditable" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
      <testcase name="testCloneIntegerOption" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.server.model.ServerColonyTest" incomplete="true">
    <testcase name="testEqualFoodProductionConsumptionCase" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
    <testcase name="testDeathByStarvation" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
    <testcase name="testBuildingCompletion" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
    <testcase name="testInvalidCompletion" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
    <testcase name="testAvoidStarvation" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
    <testcase name="testNoBuildingMaterialsProductionWhenBuildingNothing" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
    <testcase name="testFoodConsumption" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
    <testcase name="testLibertyAndImmigration" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol" incomplete="true">
    <testsuite name="Test for net.sf.freecol.common" incomplete="true">
      <testsuite name="Test for net.sf.freecol.common.i18n" incomplete="true">
        <testsuite name="net.sf.freecol.common.i18n.CLDRTest" incomplete="true">
          <testcase name="testRuleParsing" classname="net.sf.freecol.common.i18n.CLDRTest" incomplete="true"/>
          <testcase name="testPlurals" classname="net.sf.freecol.common.i18n.CLDRTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.i18n.MessagesTest" incomplete="true">
          <testcase name="testReplaceArbitraryTag" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testReplaceNumber" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testReplaceChoicesGrammar" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testMessageWithSpecialChars" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testReplaceGarbage" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testAbstractUnitDescription" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testChangeLocaleSettings" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testMessageString" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testNestedChoices" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testStringTemplates" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testReplaceChoicesPlural" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testUnitDescription" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
          <testcase name="testREFMessages" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        </testsuite>
      </testsuite>
      <testsuite name="Test for net.sf.freecol.common.option" incomplete="true">
        <testsuite name="net.sf.freecol.common.io.ModTest" incomplete="true">
          <testcase name="testGetRuleSets" classname="net.sf.freecol.common.io.ModTest" incomplete="true"/>
          <testcase name="testGetAllMods" classname="net.sf.freecol.common.io.ModTest" incomplete="true"/>
        </testsuite>
      </testsuite>
      <testsuite name="Test for net.sf.freecol.common.option" incomplete="true">
        <testsuite name="net.sf.freecol.common.option.OptionTest" incomplete="true">
          <testcase name="testGameOptions" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
          <testcase name="testUnitListOption" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
          <testcase name="testInheritsEditable" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
          <testcase name="testCloneIntegerOption" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
        </testsuite>
      </testsuite>
      <testsuite name="Test for net.sf.freecol.common.model" incomplete="true">
        <testsuite name="net.sf.freecol.common.model.SpecificationTest" incomplete="true">
          <testcase name="testExtendsDelete" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testLoadMods" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testExtends" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testModifiers" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testLoad" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testNationTypes" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testGetDefaultUnitType" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testGoodsTypes" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testFoundingFathers" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testRequiredAbilitiesForRoles" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testNations" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
          <testcase name="testUnitAbilities" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true">
          <testcase name="testNavalUnitMoveToTileWithSettlement" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
          <testcase name="testInvalidMoveThroughTileWithSettlement" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
          <testcase name="testGetRemainingMovesAndNewTurn" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
          <testcase name="testGetCostLandLand" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
          <testcase name="testInvalidMoveOfLandUnitToAnOceanTile" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
          <testcase name="testInvalidMoveOfNavalUnitToALandTile" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.BuildingTest" incomplete="true">
          <testcase name="testStockade" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testCottonClothProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testPasture" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testCanBuildNext" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testFortRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testUnitProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testPrintingPressBonus" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testCanAddToBuilding" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testToolsMusketProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testFortressRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testSerialize" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testTownhallProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testChurch" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testInitialColony" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testStockadeRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testNewspaperBonus" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
          <testcase name="testCanAddToSchool" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.ColonyTest" incomplete="true">
          <testcase name="testCopyColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
          <testcase name="testFoundColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
          <testcase name="testTeaParty" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
          <testcase name="testAddUnitToColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
          <testcase name="testCurrentlyBuilding" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
          <testcase name="testBuildQueueDoesNotAcceptBuildingDoubles" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
          <testcase name="testBuildQueueAcceptsUnitDoubles" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
          <testcase name="testUpkeep" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
          <testcase name="testUnderSiege" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
          <testcase name="testOccupationWithFood" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true">
          <testcase name="testNoHorsesOverProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
          <testcase name="testBellNetProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
          <testcase name="testProductionMap" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
          <testcase name="testProductionSoldier" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
          <testcase name="testConsumers" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
          <testcase name="testProductionPioneer" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
          <testcase name="testProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
          <testcase name="testGetPotentialProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.CombatTest" incomplete="true">
          <testcase name="testCaptureConvert" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
          <testcase name="testGalleonAttackedByPrivateer" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
          <testcase name="testDefendColonyWithUnarmedColonist" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
          <testcase name="testRegulars" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
          <testcase name="testSpanishAgainstNatives" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
          <testcase name="testColonistAttackedByVeteran" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
          <testcase name="testAttackIgnoresMovementPoints" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
          <testcase name="testAttackShipWithLandUnit" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
          <testcase name="testDefendColonyWithRevere" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
          <testcase name="testDefendSettlement" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.DisasterTest" incomplete="true">
          <testcase name="testDisastersPresent" classname="net.sf.freecol.common.model.DisasterTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.EuropeTest" incomplete="true">
          <testcase name="testMissionary" classname="net.sf.freecol.common.model.EuropeTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true">
          <testcase name="testAddAllFathers" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
          <testcase name="testAvailableTo" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
          <testcase name="testFeatures" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
          <testcase name="testBellsRequired" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.GameTest" incomplete="true">
          <testcase name="testGame" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
          <testcase name="testTurn" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
          <testcase name="testAddPlayer" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.GoodsTest" incomplete="true">
          <testcase name="testGetTakeSpace" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testGetInputType" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testSetGetAmount" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testGoodsGameLocationIntInt" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testToString" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testBuildingMaterials" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testIsFarmedGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testGetName" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testGetOutputType" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testMilitaryGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testTradeGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testProductionChain" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testAdjustAmount" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
          <testcase name="testSetOwner" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.GoodsContainerTest" incomplete="true">
          <testcase name="testContainer" classname="net.sf.freecol.common.model.GoodsContainerTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true">
          <testcase name="testAutomaticEquipBraves" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
          <testcase name="testSettlementDoesNotOwnWaterTiles" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
          <testcase name="testTradeGoodsWithSetlement" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true">
          <testcase name="testPaine" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testBolivar" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testBrebeuf" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testStuyvesant" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testBrewster" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testCortes" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testDeWitt" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testJefferson" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testMinuit" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testRevere" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
          <testcase name="testDeLasCasas" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.LimitTest" incomplete="true">
          <testcase name="testSuccessionLimits" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
          <testcase name="testWagonTrainLimit" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
          <testcase name="testOperand" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
          <testcase name="testIndependenceLimits" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.MapTest" incomplete="true">
          <testcase name="testSearchForColony" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testCopy" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testNoPathAvailableDueToUnitInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testGetAllTiles" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testGetSurroundingTiles" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testMapGameInt" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testLatitude" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testRandomDirection" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testShortestPathObstructed" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testFindPath" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testMoveThroughTileWithEnemyUnit" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testNoPathAvailableDueToColonyInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testNoPathAvailableDueToCampInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
          <testcase name="testGetReverseDirection" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.MarketTest" incomplete="true">
          <testcase name="testSerialization" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
          <testcase name="testTransactionListeners" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
          <testcase name="testInitialMarket" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.ModelMessageTest" incomplete="true">
          <testcase name="testDefaultId" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
          <testcase name="testHashCode" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
          <testcase name="testModelMapSet2" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.ModifierTest" incomplete="true">
          <testcase name="testScope" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testCombinedModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testPercentageModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testHashEquals" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testAdditiveModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testTimeLimits" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testCombinePercentageModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testModifierUnknown" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testCombineMultiplicativeModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testMultiplicativeModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testIncrements" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
          <testcase name="testCombineAdditiveModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.MonarchTest" incomplete="true">
          <testcase name="testTaxActionChoices" classname="net.sf.freecol.common.model.MonarchTest" incomplete="true"/>
          <testcase name="testSerialize" classname="net.sf.freecol.common.model.MonarchTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.MovementTest" incomplete="true">
          <testcase name="testMoveAlongRoad" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
          <testcase name="testMoveAlongRiver" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
          <testcase name="testMoveFromPlainsToHills" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
          <testcase name="testMoveFromPlainsToPlains" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
          <testcase name="testScoutIndianSettlement" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
          <testcase name="testScoutColony" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.NationTypeTest" incomplete="true">
          <testcase name="testSettlementType" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
          <testcase name="testIsREF" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
          <testcase name="testisRef" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
          <testcase name="testAdvantagesThatOnlyApplyToPersons" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
          <testcase name="testHasType" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
          <testcase name="testStartingUnits" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.PlayerTest" incomplete="true">
          <testcase name="testAddAnotherPlayersUnit" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
          <testcase name="testFreecolPlayers" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
          <testcase name="testTension" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
          <testcase name="testUnits" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
          <testcase name="testClassicPlayers" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true">
          <testcase name="testOtherBuildings" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testRainForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testHorseProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testSavannah" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testHills" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testMarsh" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testOcean" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testSwamp" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testCoatProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testLake" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testHighSeas" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testPrairie" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testWetlandForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testGrassland" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testBroadleafForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testCrossProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testGreatRiver" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testToolsProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testMixedForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testBorealForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testBellProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testClothProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testMountains" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testArctic" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testConiferForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testDesert" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testHammerProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testPlains" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testMusketProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testCigarProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testTundra" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testRumProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testTropicalForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
          <testcase name="testScrubForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.RandomRangeTest" incomplete="true">
          <testcase name="testRandomRange" classname="net.sf.freecol.common.model.RandomRangeTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.RoleTest" incomplete="true">
          <testcase name="testRoleComparator" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
          <testcase name="testMilitaryRoles" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
          <testcase name="testGoodsDifference" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
          <testcase name="testCompatibleRoles" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
          <testcase name="testGetRoleWithAbility" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.SchoolTest" incomplete="true">
          <testcase name="testEducationOption" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
          <testcase name="testChangeTeachers" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
          <testcase name="testUpgrades" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.ScopeTest" incomplete="true">
          <testcase name="testEmptyScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
          <testcase name="testMethodScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
          <testcase name="testCombinedScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
          <testcase name="testTypeScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
          <testcase name="testAbilityScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
          <testcase name="testEquality" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
          <testcase name="testMatchesNull" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
          <testcase name="testGameObjects" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.SerializationTest" incomplete="true">
          <testcase name="testMapAmerica" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
          <testcase name="testSpecification" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
          <testcase name="testValidation" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
          <testcase name="testStringTemplate" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
          <testcase name="testMapAfrica" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
          <testcase name="testMapCaribbean" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
          <testcase name="testDifficulty" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
          <testcase name="testGeneratedLists" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
          <testcase name="testMapAustralia" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.SettlementTest" incomplete="true">
          <testcase name="testColonyClaimsWater" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
          <testcase name="testLineOfSight" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
          <testcase name="testSettlementRadius" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
          <testcase name="testCanImproveUnitMilitaryRole" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
          <testcase name="testSettlementDoesNotClaimWater" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
          <testcase name="testColonyRadius" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.SoLTest" incomplete="true">
          <testcase name="testSoL" classname="net.sf.freecol.common.model.SoLTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.TileImprovementTest" incomplete="true">
          <testcase name="testRiverWithExtras" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
          <testcase name="testRiverNoExtras" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
          <testcase name="testAllFrills" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
          <testcase name="testOldStyle" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
          <testcase name="testEquality" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.TileItemContainerTest" incomplete="true">
          <testcase name="testCopyFromWithEveryThing" classname="net.sf.freecol.common.model.TileItemContainerTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.TileTest" incomplete="true">
          <testcase name="testTileTypeChangeProduction" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testDefenceModifiers" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testPrimarySecondaryGoods" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testPotential" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testCopy" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testImprovements" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testMinerals" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testMaximumPotential" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testIsTileTypeAllowed" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testGetWorkAmount" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testGetBestDisembarkTile" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testColonyImprovements" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testConiferForest" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testProductionModifiers" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
          <testcase name="testZIndex" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.TradeRouteTest" incomplete="true">
          <testcase name="testTradeRoute" classname="net.sf.freecol.common.model.TradeRouteTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.UnitTest" incomplete="true">
          <testcase name="testIsColonist" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testUnitLosesExperienceWithRoleChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testUnitAvailability" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testOwnerChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testIndianDies" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testGetMovesAsString" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testCopy" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testDefaultRole" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testMissionary" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testUnitCanBuildColony" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testCarrierOwnerChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testTreasureTransportFee" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testFailedAddGoods" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testAttrition" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testGetLineOfSight" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testCanAdd" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
          <testcase name="testUnitLocationAfterBuildingColony" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true">
          <testcase name="testEmptyScope" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
          <testcase name="testCreation" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
          <testcase name="testAbilityScope" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
          <testcase name="testEquality" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
        </testsuite>
      </testsuite>
      <testsuite name="Test for net.sf.freecol.common.utils" incomplete="true">
        <testsuite name="net.sf.freecol.common.utils.UtilsTest" incomplete="true">
          <testcase name="testComparator" classname="net.sf.freecol.common.utils.UtilsTest" incomplete="true"/>
          <testcase name="testGetPermutations" classname="net.sf.freecol.common.utils.UtilsTest" incomplete="true"/>
        </testsuite>
      </testsuite>
      <testsuite name="Test for net.sf.freecol.common.sound" incomplete="true">
        <testsuite name="net.sf.freecol.common.sound.SoundTest" incomplete="true">
          <testcase name="testSound" classname="net.sf.freecol.common.sound.SoundTest" incomplete="true"/>
          <testcase name="testClassic" classname="net.sf.freecol.common.sound.SoundTest" incomplete="true"/>
        </testsuite>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.server" incomplete="true">
      <testsuite name="net.sf.freecol.server.SaveLoadTest" incomplete="true">
        <testcase name="testDelayedLoading" classname="net.sf.freecol.server.SaveLoadTest" incomplete="true"/>
        <testcase name="testImmediateLoading" classname="net.sf.freecol.server.SaveLoadTest" incomplete="true"/>
        <testcase name="testImport" classname="net.sf.freecol.server.SaveLoadTest" incomplete="true"/>
      </testsuite>
      <testsuite name="Test for net.sf.freecol.server.ai" incomplete="true">
        <testsuite name="net.sf.freecol.server.ai.AIColonyTest" incomplete="true">
          <testcase name="testBuildersAllocation" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
          <testcase name="testBestDefender" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
          <testcase name="testBuildersAllocNoRawMatTiles" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
          <testcase name="testExpertAllocColonyHasEnoughRawMat" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.ContactTest" incomplete="true">
          <testcase name="testNativeMeetsEuropean" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
          <testcase name="testNativeMeetsColony" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
          <testcase name="testShipMeetsShip" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
          <testcase name="testNativeMeetsNative" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
          <testcase name="testNativeMeetsIndianSettlement" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
          <testcase name="testEuropeanMeetsIndianSettlement" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
          <testcase name="testEuropeanMeetsNative" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true">
          <testcase name="testGetBestWorker" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
          <testcase name="testBestImprovements" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
          <testcase name="testNoBuildRawMatTiles" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
          <testcase name="testReqLumberAndHammersForBuild" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
          <testcase name="testReqOreAndToolsWithEnoughHammersForBuild" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true">
          <testcase name="testIsTargetValidForSeekAndDestroy" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
          <testcase name="testImpossibleConditionsForTargetSelection" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
          <testcase name="testSecureIndianSettlementMissionIgnoreNavalThreat" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
          <testcase name="testSecureIndianSettlementMission" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
          <testcase name="testAssignDefendSettlementMission" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.REFTest" incomplete="true">
          <testcase name="testCreateREFPlayer" classname="net.sf.freecol.server.ai.REFTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true">
          <testcase name="testEquipBravesNotEnoughReqGoods" classname="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true"/>
          <testcase name="testEquipBraves" classname="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.TensionTest" incomplete="true">
          <testcase name="testTension" classname="net.sf.freecol.server.ai.TensionTest" incomplete="true"/>
        </testsuite>
        <testsuite name="Test for net.sf.freecol.server.ai.mission" incomplete="true">
          <testsuite name="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true">
            <testcase name="testImprovementNoLongerValid" classname="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true"/>
          </testsuite>
          <testsuite name="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true">
            <testcase name="testIsMissionValid" classname="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true"/>
          </testsuite>
          <testsuite name="net.sf.freecol.server.ai.mission.ScoutingMissionTest" incomplete="true">
            <testcase name="testHorsesLost" classname="net.sf.freecol.server.ai.mission.ScoutingMissionTest" incomplete="true"/>
          </testsuite>
          <testsuite name="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true">
            <testcase name="testGetNextStopAlreadyAtDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
            <testcase name="testGetDefaultDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
            <testcase name="testWagonTrain" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
            <testcase name="testGetNextStopIsColony" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
            <testcase name="testGetNextStopIsEurope" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
            <testcase name="testTransportMissionInvalidAfterCombatLost" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
          </testsuite>
          <testsuite name="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true">
            <testcase name="testCapturedUnitsLoseMission" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
            <testcase name="testDoNotPursueUnitsInColonies" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
          </testsuite>
        </testsuite>
      </testsuite>
      <testsuite name="Test for net.sf.freecol.server.control" incomplete="true">
        <testsuite name="net.sf.freecol.server.control.InGameControllerTest" incomplete="true">
          <testcase name="testWarDeclarationAffectsSettlementAlarm" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testArtilleryDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testPeaceTreatyFromWarStance" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testScoutDiesNotLosesEquipment" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testDragoonDemotedByBrave" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testCeaseFireTreaty" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testDeclarationOfWarFromPeace" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testAttackColonyWithVeteran" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testDragoonDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testAddFatherUnits" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testDumpGoods" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testAtackedNavalUnitIsDamaged" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testLaSalle" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testPocahontas" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testPioneerDiesNotLosesEquipment" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testPromotion" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testClearSpecialty" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testPeaceTreatyFromCeaseFireStance" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testUnitLosesExperienceWithWorkChange" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testEquipIndianNotEnoughReqGoods" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testCashInTreasure" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testAddFatherUpgrades" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testUnitTypeChangeOnEnterColony" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testSoldierDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testAttrition" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testUnarmedAttack" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testCarpenterHouseNationalAdvantage" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testCreateMission" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testDoAssignedWorkAmateurAndHardyPioneer" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testEmbark" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testVeteranSoldierDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testLoseColonyDefenceWithRevere" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testBuildingBonus" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testColonistDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testScoutDefeatedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testAddFatherBuildingEvent" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testAttackColonyWithBrave" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
          <testcase name="testEquipIndian" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        </testsuite>
      </testsuite>
      <testsuite name="Test for net.sf.freecol.server.model" incomplete="true">
        <testsuite name="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true">
          <testcase name="testMoveTeacherOutside" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testTeacherStoresProgress" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testCaseTwoTeachersWithDifferentExp" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testMoveTeacherInside" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testConcurrentUpgrade" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testTeachingOrder" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testTeachPettyCriminalsByMaster" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testTeachingDoublePromotion" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testUniversity" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testTwoTeachersSimple" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testTrackerBug1616384" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testSingleGuyTwoTeachers2" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testCollege" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testSingleGuyTwoTeachers" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testSonsOfLiberty" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testTwoTeachersOfSameKind" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testTeachPettyCriminals" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testProductionBonus" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testPartTraining" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testExpertTeaching" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testColonialRegular" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
          <testcase name="testTeachIndenturedServants" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.model.ServerColonyTest" incomplete="true">
          <testcase name="testEqualFoodProductionConsumptionCase" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
          <testcase name="testDeathByStarvation" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
          <testcase name="testBuildingCompletion" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
          <testcase name="testInvalidCompletion" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
          <testcase name="testAvoidStarvation" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
          <testcase name="testNoBuildingMaterialsProductionWhenBuildingNothing" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
          <testcase name="testFoodConsumption" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
          <testcase name="testLibertyAndImmigration" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true">
          <testcase name="testHorseBreedingNoFoodAvail" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
          <testcase name="testPricing" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
          <testcase name="testHorseBreeding" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
          <testcase name="testFoodConsumption" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true">
          <testcase name="testCheckNoGameOverEnoughMoney" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testCheckGameOver1600Threshold" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testCheckNoGameOverHasColonistInNewWorld" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testHasExploredTile" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testBuyingMakesPricesRaise" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testCheckGameOverUnitsGoingToEurope" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testDutchMarket" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testCheckGameOverNoUnits" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testCheckGameOverUnitsGoingToNewWorld" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testSellingMakesPricesFall" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testMarketRecovery" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testLoadInColony" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
          <testcase name="testLoadInEurope" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.model.ServerUnitTest" incomplete="true">
          <testcase name="testDoAssignedWorkHardyPioneerPlowPlain" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
          <testcase name="testColonyProfitFromEnhancement" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
          <testcase name="testExposeResource" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
          <testcase name="testDoAssignedWorkHardyPioneerBuildRoad" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
          <testcase name="testUnitPromotionWorkingInWorkTile" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
          <testcase name="testUnitGetsExperienceThroughWork" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
          <testcase name="testUnitLumberDelivery" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
          <testcase name="testToggleHorses" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
        </testsuite>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.server.generator" incomplete="true">
      <testsuite name="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true">
        <testcase name="testSinglePlayerOnSmallMap" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
        <testcase name="testImportMap" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
        <testcase name="testRegions" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
        <testcase name="testWithNoIndians" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
        <testcase name="testIndianCapital" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
        <testcase name="testMapGenerator" classname="net.sf.freecol.server.generator.MapGeneratorTest" incomplete="true"/>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.client.gui" incomplete="true">
      <testsuite name="net.sf.freecol.client.gui.FontTest" incomplete="true">
        <testcase name="testLogicalSerif" classname="net.sf.freecol.client.gui.FontTest" incomplete="true"/>
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.common.i18n" incomplete="true">
    <testsuite name="net.sf.freecol.common.i18n.CLDRTest" incomplete="true">
      <testcase name="testRuleParsing" classname="net.sf.freecol.common.i18n.CLDRTest" incomplete="true"/>
      <testcase name="testPlurals" classname="net.sf.freecol.common.i18n.CLDRTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.i18n.MessagesTest" incomplete="true">
      <testcase name="testReplaceArbitraryTag" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testReplaceNumber" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testReplaceChoicesGrammar" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testMessageWithSpecialChars" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testReplaceGarbage" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testAbstractUnitDescription" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testChangeLocaleSettings" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testMessageString" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testNestedChoices" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testStringTemplates" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testReplaceChoicesPlural" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testUnitDescription" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      <testcase name="testREFMessages" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.HighSeasTest" incomplete="true">
    <testcase name="test" classname="net.sf.freecol.common.model.HighSeasTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.common.model" incomplete="true">
    <testsuite name="net.sf.freecol.common.model.SpecificationTest" incomplete="true">
      <testcase name="testExtendsDelete" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testLoadMods" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testExtends" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testModifiers" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testLoad" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testNationTypes" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testGetDefaultUnitType" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testGoodsTypes" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testFoundingFathers" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testRequiredAbilitiesForRoles" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testNations" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      <testcase name="testUnitAbilities" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true">
      <testcase name="testNavalUnitMoveToTileWithSettlement" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
      <testcase name="testInvalidMoveThroughTileWithSettlement" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
      <testcase name="testGetRemainingMovesAndNewTurn" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
      <testcase name="testGetCostLandLand" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
      <testcase name="testInvalidMoveOfLandUnitToAnOceanTile" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
      <testcase name="testInvalidMoveOfNavalUnitToALandTile" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.BuildingTest" incomplete="true">
      <testcase name="testStockade" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testCottonClothProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testPasture" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testCanBuildNext" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testFortRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testUnitProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testPrintingPressBonus" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testCanAddToBuilding" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testToolsMusketProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testFortressRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testSerialize" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testTownhallProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testChurch" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testInitialColony" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testStockadeRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testNewspaperBonus" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      <testcase name="testCanAddToSchool" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.ColonyTest" incomplete="true">
      <testcase name="testCopyColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      <testcase name="testFoundColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      <testcase name="testTeaParty" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      <testcase name="testAddUnitToColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      <testcase name="testCurrentlyBuilding" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      <testcase name="testBuildQueueDoesNotAcceptBuildingDoubles" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      <testcase name="testBuildQueueAcceptsUnitDoubles" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      <testcase name="testUpkeep" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      <testcase name="testUnderSiege" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      <testcase name="testOccupationWithFood" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true">
      <testcase name="testNoHorsesOverProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
      <testcase name="testBellNetProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
      <testcase name="testProductionMap" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
      <testcase name="testProductionSoldier" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
      <testcase name="testConsumers" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
      <testcase name="testProductionPioneer" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
      <testcase name="testProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
      <testcase name="testGetPotentialProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.CombatTest" incomplete="true">
      <testcase name="testCaptureConvert" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      <testcase name="testGalleonAttackedByPrivateer" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      <testcase name="testDefendColonyWithUnarmedColonist" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      <testcase name="testRegulars" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      <testcase name="testSpanishAgainstNatives" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      <testcase name="testColonistAttackedByVeteran" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      <testcase name="testAttackIgnoresMovementPoints" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      <testcase name="testAttackShipWithLandUnit" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      <testcase name="testDefendColonyWithRevere" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      <testcase name="testDefendSettlement" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.DisasterTest" incomplete="true">
      <testcase name="testDisastersPresent" classname="net.sf.freecol.common.model.DisasterTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.EuropeTest" incomplete="true">
      <testcase name="testMissionary" classname="net.sf.freecol.common.model.EuropeTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true">
      <testcase name="testAddAllFathers" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
      <testcase name="testAvailableTo" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
      <testcase name="testFeatures" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
      <testcase name="testBellsRequired" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.GameTest" incomplete="true">
      <testcase name="testGame" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
      <testcase name="testTurn" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
      <testcase name="testAddPlayer" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.GoodsTest" incomplete="true">
      <testcase name="testGetTakeSpace" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testGetInputType" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testSetGetAmount" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testGoodsGameLocationIntInt" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testToString" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testBuildingMaterials" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testIsFarmedGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testGetName" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testGetOutputType" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testMilitaryGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testTradeGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testProductionChain" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testAdjustAmount" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      <testcase name="testSetOwner" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.GoodsContainerTest" incomplete="true">
      <testcase name="testContainer" classname="net.sf.freecol.common.model.GoodsContainerTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true">
      <testcase name="testAutomaticEquipBraves" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
      <testcase name="testSettlementDoesNotOwnWaterTiles" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
      <testcase name="testTradeGoodsWithSetlement" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true">
      <testcase name="testPaine" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testBolivar" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testBrebeuf" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testStuyvesant" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testBrewster" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testCortes" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testDeWitt" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testJefferson" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testMinuit" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testRevere" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
      <testcase name="testDeLasCasas" classname="net.sf.freecol.common.model.IndividualFatherTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.LimitTest" incomplete="true">
      <testcase name="testSuccessionLimits" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
      <testcase name="testWagonTrainLimit" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
      <testcase name="testOperand" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
      <testcase name="testIndependenceLimits" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.MapTest" incomplete="true">
      <testcase name="testSearchForColony" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testCopy" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testNoPathAvailableDueToUnitInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testGetAllTiles" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testGetSurroundingTiles" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testMapGameInt" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testLatitude" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testRandomDirection" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testShortestPathObstructed" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testFindPath" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testMoveThroughTileWithEnemyUnit" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testNoPathAvailableDueToColonyInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testNoPathAvailableDueToCampInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      <testcase name="testGetReverseDirection" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.MarketTest" incomplete="true">
      <testcase name="testSerialization" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
      <testcase name="testTransactionListeners" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
      <testcase name="testInitialMarket" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.ModelMessageTest" incomplete="true">
      <testcase name="testDefaultId" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
      <testcase name="testHashCode" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
      <testcase name="testModelMapSet2" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.ModifierTest" incomplete="true">
      <testcase name="testScope" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testCombinedModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testPercentageModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testHashEquals" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testAdditiveModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testTimeLimits" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testCombinePercentageModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testModifierUnknown" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testCombineMultiplicativeModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testMultiplicativeModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testIncrements" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      <testcase name="testCombineAdditiveModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.MonarchTest" incomplete="true">
      <testcase name="testTaxActionChoices" classname="net.sf.freecol.common.model.MonarchTest" incomplete="true"/>
      <testcase name="testSerialize" classname="net.sf.freecol.common.model.MonarchTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.MovementTest" incomplete="true">
      <testcase name="testMoveAlongRoad" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
      <testcase name="testMoveAlongRiver" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
      <testcase name="testMoveFromPlainsToHills" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
      <testcase name="testMoveFromPlainsToPlains" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
      <testcase name="testScoutIndianSettlement" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
      <testcase name="testScoutColony" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.NationTypeTest" incomplete="true">
      <testcase name="testSettlementType" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
      <testcase name="testIsREF" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
      <testcase name="testisRef" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
      <testcase name="testAdvantagesThatOnlyApplyToPersons" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
      <testcase name="testHasType" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
      <testcase name="testStartingUnits" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.PlayerTest" incomplete="true">
      <testcase name="testAddAnotherPlayersUnit" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
      <testcase name="testFreecolPlayers" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
      <testcase name="testTension" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
      <testcase name="testUnits" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
      <testcase name="testClassicPlayers" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true">
      <testcase name="testOtherBuildings" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testRainForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testHorseProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testSavannah" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testHills" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testMarsh" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testOcean" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testSwamp" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testCoatProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testLake" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testHighSeas" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testPrairie" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testWetlandForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testGrassland" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testBroadleafForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testCrossProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testGreatRiver" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testToolsProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testMixedForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testBorealForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testBellProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testClothProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testMountains" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testArctic" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testConiferForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testDesert" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testHammerProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testPlains" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testMusketProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testCigarProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testTundra" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testRumProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testTropicalForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      <testcase name="testScrubForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.RandomRangeTest" incomplete="true">
      <testcase name="testRandomRange" classname="net.sf.freecol.common.model.RandomRangeTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.RoleTest" incomplete="true">
      <testcase name="testRoleComparator" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
      <testcase name="testMilitaryRoles" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
      <testcase name="testGoodsDifference" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
      <testcase name="testCompatibleRoles" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
      <testcase name="testGetRoleWithAbility" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.SchoolTest" incomplete="true">
      <testcase name="testEducationOption" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
      <testcase name="testChangeTeachers" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
      <testcase name="testUpgrades" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.ScopeTest" incomplete="true">
      <testcase name="testEmptyScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
      <testcase name="testMethodScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
      <testcase name="testCombinedScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
      <testcase name="testTypeScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
      <testcase name="testAbilityScope" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
      <testcase name="testEquality" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
      <testcase name="testMatchesNull" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
      <testcase name="testGameObjects" classname="net.sf.freecol.common.model.ScopeTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.SerializationTest" incomplete="true">
      <testcase name="testMapAmerica" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
      <testcase name="testSpecification" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
      <testcase name="testValidation" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
      <testcase name="testStringTemplate" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
      <testcase name="testMapAfrica" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
      <testcase name="testMapCaribbean" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
      <testcase name="testDifficulty" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
      <testcase name="testGeneratedLists" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
      <testcase name="testMapAustralia" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.SettlementTest" incomplete="true">
      <testcase name="testColonyClaimsWater" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
      <testcase name="testLineOfSight" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
      <testcase name="testSettlementRadius" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
      <testcase name="testCanImproveUnitMilitaryRole" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
      <testcase name="testSettlementDoesNotClaimWater" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
      <testcase name="testColonyRadius" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.SoLTest" incomplete="true">
      <testcase name="testSoL" classname="net.sf.freecol.common.model.SoLTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.TileImprovementTest" incomplete="true">
      <testcase name="testRiverWithExtras" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
      <testcase name="testRiverNoExtras" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
      <testcase name="testAllFrills" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
      <testcase name="testOldStyle" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
      <testcase name="testEquality" classname="net.sf.freecol.common.model.TileImprovementTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.TileItemContainerTest" incomplete="true">
      <testcase name="testCopyFromWithEveryThing" classname="net.sf.freecol.common.model.TileItemContainerTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.TileTest" incomplete="true">
      <testcase name="testTileTypeChangeProduction" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testDefenceModifiers" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testPrimarySecondaryGoods" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testPotential" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testCopy" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testImprovements" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testMinerals" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testMaximumPotential" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testIsTileTypeAllowed" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testGetWorkAmount" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testGetBestDisembarkTile" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testColonyImprovements" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testConiferForest" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testProductionModifiers" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
      <testcase name="testZIndex" classname="net.sf.freecol.common.model.TileTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.TradeRouteTest" incomplete="true">
      <testcase name="testTradeRoute" classname="net.sf.freecol.common.model.TradeRouteTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.UnitTest" incomplete="true">
      <testcase name="testIsColonist" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testUnitLosesExperienceWithRoleChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testUnitAvailability" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testOwnerChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testIndianDies" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testGetMovesAsString" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testCopy" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testDefaultRole" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testMissionary" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testUnitCanBuildColony" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testCarrierOwnerChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testTreasureTransportFee" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testFailedAddGoods" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testAttrition" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testGetLineOfSight" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testCanAdd" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      <testcase name="testUnitLocationAfterBuildingColony" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true">
      <testcase name="testEmptyScope" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
      <testcase name="testCreation" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
      <testcase name="testAbilityScope" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
      <testcase name="testEquality" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.UnitTest" incomplete="true">
    <testcase name="testIsColonist" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testUnitLosesExperienceWithRoleChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testUnitAvailability" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testOwnerChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testIndianDies" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testGetMovesAsString" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testCopy" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testDefaultRole" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testMissionary" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testUnitCanBuildColony" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testCarrierOwnerChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testTreasureTransportFee" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testFailedAddGoods" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testAttrition" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testGetLineOfSight" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testCanAdd" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
    <testcase name="testUnitLocationAfterBuildingColony" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.BuildingTest" incomplete="true">
    <testcase name="testStockade" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testCottonClothProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testPasture" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testCanBuildNext" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testFortRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testUnitProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testPrintingPressBonus" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testCanAddToBuilding" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testToolsMusketProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testFortressRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testSerialize" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testTownhallProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testChurch" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testInitialColony" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testStockadeRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testNewspaperBonus" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
    <testcase name="testCanAddToSchool" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.MovementTest" incomplete="true">
    <testcase name="testMoveAlongRoad" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
    <testcase name="testMoveAlongRiver" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
    <testcase name="testMoveFromPlainsToHills" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
    <testcase name="testMoveFromPlainsToPlains" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
    <testcase name="testScoutIndianSettlement" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
    <testcase name="testScoutColony" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.ModelMessageTest" incomplete="true">
    <testcase name="testDefaultId" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
    <testcase name="testHashCode" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
    <testcase name="testModelMapSet2" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.io.ModTest" incomplete="true">
    <testcase name="testGetRuleSets" classname="net.sf.freecol.common.io.ModTest" incomplete="true"/>
    <testcase name="testGetAllMods" classname="net.sf.freecol.common.io.ModTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.SoLTest" incomplete="true">
    <testcase name="testSoL" classname="net.sf.freecol.common.model.SoLTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.MapTest" incomplete="true">
    <testcase name="testSearchForColony" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testCopy" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testNoPathAvailableDueToUnitInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testGetAllTiles" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testGetSurroundingTiles" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testMapGameInt" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testLatitude" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testRandomDirection" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testShortestPathObstructed" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testFindPath" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testMoveThroughTileWithEnemyUnit" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testNoPathAvailableDueToColonyInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testNoPathAvailableDueToCampInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
    <testcase name="testGetReverseDirection" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true">
    <testcase name="testAddAllFathers" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
    <testcase name="testAvailableTo" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
    <testcase name="testFeatures" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
    <testcase name="testBellsRequired" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.utils.UtilsTest" incomplete="true">
    <testcase name="testComparator" classname="net.sf.freecol.common.utils.UtilsTest" incomplete="true"/>
    <testcase name="testGetPermutations" classname="net.sf.freecol.common.utils.UtilsTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.RoleTest" incomplete="true">
    <testcase name="testRoleComparator" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
    <testcase name="testMilitaryRoles" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
    <testcase name="testGoodsDifference" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
    <testcase name="testCompatibleRoles" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
    <testcase name="testGetRoleWithAbility" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true">
    <testcase name="testEmptyScope" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
    <testcase name="testCreation" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
    <testcase name="testAbilityScope" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
    <testcase name="testEquality" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.common.option" incomplete="true">
    <testsuite name="net.sf.freecol.common.io.ModTest" incomplete="true">
      <testcase name="testGetRuleSets" classname="net.sf.freecol.common.io.ModTest" incomplete="true"/>
      <testcase name="testGetAllMods" classname="net.sf.freecol.common.io.ModTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.MarketTest" incomplete="true">
    <testcase name="testSerialization" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
    <testcase name="testTransactionListeners" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
    <testcase name="testInitialMarket" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.SchoolTest" incomplete="true">
    <testcase name="testEducationOption" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
    <testcase name="testChangeTeachers" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
    <testcase name="testUpgrades" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.common" incomplete="true">
    <testsuite name="Test for net.sf.freecol.common.i18n" incomplete="true">
      <testsuite name="net.sf.freecol.common.i18n.CLDRTest" time="0.019">
        <testcase name="testRuleParsing" classname="net.sf.freecol.common.i18n.CLDRTest" time="0.011"/>
        <testcase name="testPlurals" classname="net.sf.freecol.common.i18n.CLDRTest" time="0.008"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.i18n.MessagesTest" incomplete="true">
        <testcase name="testReplaceArbitraryTag" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testReplaceNumber" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testReplaceChoicesGrammar" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testMessageWithSpecialChars" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testReplaceGarbage" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testAbstractUnitDescription" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testChangeLocaleSettings" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testMessageString" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testNestedChoices" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testStringTemplates" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testReplaceChoicesPlural" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testUnitDescription" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
        <testcase name="testREFMessages" classname="net.sf.freecol.common.i18n.MessagesTest" incomplete="true"/>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.common.option" incomplete="true">
      <testsuite name="net.sf.freecol.common.io.ModTest" incomplete="true">
        <testcase name="testGetRuleSets" classname="net.sf.freecol.common.io.ModTest" incomplete="true"/>
        <testcase name="testGetAllMods" classname="net.sf.freecol.common.io.ModTest" incomplete="true"/>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.common.option" incomplete="true">
      <testsuite name="net.sf.freecol.common.option.OptionTest" incomplete="true">
        <testcase name="testGameOptions" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
        <testcase name="testUnitListOption" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
        <testcase name="testInheritsEditable" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
        <testcase name="testCloneIntegerOption" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.common.model" incomplete="true">
      <testsuite name="net.sf.freecol.common.model.SpecificationTest" incomplete="true">
        <testcase name="testExtendsDelete" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testLoadMods" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testExtends" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testModifiers" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testLoad" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testNationTypes" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testGetDefaultUnitType" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testGoodsTypes" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testFoundingFathers" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testRequiredAbilitiesForRoles" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testNations" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
        <testcase name="testUnitAbilities" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true">
        <testcase name="testNavalUnitMoveToTileWithSettlement" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
        <testcase name="testInvalidMoveThroughTileWithSettlement" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
        <testcase name="testGetRemainingMovesAndNewTurn" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
        <testcase name="testGetCostLandLand" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
        <testcase name="testInvalidMoveOfLandUnitToAnOceanTile" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
        <testcase name="testInvalidMoveOfNavalUnitToALandTile" classname="net.sf.freecol.common.model.BaseCostDeciderTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.BuildingTest" incomplete="true">
        <testcase name="testStockade" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testCottonClothProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testPasture" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testCanBuildNext" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testFortRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testUnitProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testPrintingPressBonus" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testCanAddToBuilding" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testToolsMusketProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testFortressRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testSerialize" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testTownhallProduction" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testChurch" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testInitialColony" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testStockadeRequiresMinimumPopulation" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testNewspaperBonus" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
        <testcase name="testCanAddToSchool" classname="net.sf.freecol.common.model.BuildingTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.ColonyTest" incomplete="true">
        <testcase name="testCopyColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        <testcase name="testFoundColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        <testcase name="testTeaParty" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        <testcase name="testAddUnitToColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        <testcase name="testCurrentlyBuilding" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        <testcase name="testBuildQueueDoesNotAcceptBuildingDoubles" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        <testcase name="testBuildQueueAcceptsUnitDoubles" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        <testcase name="testUpkeep" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        <testcase name="testUnderSiege" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
        <testcase name="testOccupationWithFood" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true">
        <testcase name="testNoHorsesOverProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
        <testcase name="testBellNetProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
        <testcase name="testProductionMap" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
        <testcase name="testProductionSoldier" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
        <testcase name="testConsumers" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
        <testcase name="testProductionPioneer" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
        <testcase name="testProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
        <testcase name="testGetPotentialProduction" classname="net.sf.freecol.common.model.ColonyProductionTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.CombatTest" incomplete="true">
        <testcase name="testCaptureConvert" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        <testcase name="testGalleonAttackedByPrivateer" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        <testcase name="testDefendColonyWithUnarmedColonist" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        <testcase name="testRegulars" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        <testcase name="testSpanishAgainstNatives" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        <testcase name="testColonistAttackedByVeteran" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        <testcase name="testAttackIgnoresMovementPoints" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        <testcase name="testAttackShipWithLandUnit" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        <testcase name="testDefendColonyWithRevere" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
        <testcase name="testDefendSettlement" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.DisasterTest" incomplete="true">
        <testcase name="testDisastersPresent" classname="net.sf.freecol.common.model.DisasterTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.EuropeTest" incomplete="true">
        <testcase name="testMissionary" classname="net.sf.freecol.common.model.EuropeTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true">
        <testcase name="testAddAllFathers" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
        <testcase name="testAvailableTo" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
        <testcase name="testFeatures" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
        <testcase name="testBellsRequired" classname="net.sf.freecol.common.model.FoundingFatherTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.GameTest" incomplete="true">
        <testcase name="testGame" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
        <testcase name="testTurn" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
        <testcase name="testAddPlayer" classname="net.sf.freecol.common.model.GameTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.GoodsTest" incomplete="true">
        <testcase name="testGetTakeSpace" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testGetInputType" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testSetGetAmount" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testGoodsGameLocationIntInt" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testToString" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testBuildingMaterials" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testIsFarmedGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testGetName" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testGetOutputType" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testMilitaryGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testTradeGoods" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testProductionChain" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testAdjustAmount" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
        <testcase name="testSetOwner" classname="net.sf.freecol.common.model.GoodsTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.GoodsContainerTest" incomplete="true">
        <testcase name="testContainer" classname="net.sf.freecol.common.model.GoodsContainerTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true">
        <testcase name="testAutomaticEquipBraves" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
        <testcase name="testSettlementDoesNotOwnWaterTiles" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
        <testcase name="testTradeGoodsWithSetlement" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.IndividualFatherTest" time="0.356">
        <testcase name="testPaine" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.081"/>
        <testcase name="testBolivar" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.051"/>
        <testcase name="testBrebeuf" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.004"/>
        <testcase name="testStuyvesant" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.037"/>
        <testcase name="testBrewster" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.005"/>
        <testcase name="testCortes" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.078"/>
        <testcase name="testDeWitt" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.005"/>
        <testcase name="testJefferson" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.022"/>
        <testcase name="testMinuit" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.024"/>
        <testcase name="testRevere" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.012"/>
        <testcase name="testDeLasCasas" classname="net.sf.freecol.common.model.IndividualFatherTest" time="0.037"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.LimitTest" incomplete="true">
        <testcase name="testSuccessionLimits" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
        <testcase name="testWagonTrainLimit" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
        <testcase name="testOperand" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
        <testcase name="testIndependenceLimits" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.MapTest" incomplete="true">
        <testcase name="testSearchForColony" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testCopy" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testNoPathAvailableDueToUnitInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testGetAllTiles" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testGetSurroundingTiles" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testMapGameInt" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testLatitude" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testRandomDirection" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testShortestPathObstructed" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testFindPath" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testMoveThroughTileWithEnemyUnit" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testNoPathAvailableDueToColonyInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testNoPathAvailableDueToCampInTheWay" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
        <testcase name="testGetReverseDirection" classname="net.sf.freecol.common.model.MapTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.MarketTest" incomplete="true">
        <testcase name="testSerialization" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
        <testcase name="testTransactionListeners" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
        <testcase name="testInitialMarket" classname="net.sf.freecol.common.model.MarketTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.ModelMessageTest" incomplete="true">
        <testcase name="testDefaultId" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
        <testcase name="testHashCode" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
        <testcase name="testModelMapSet2" classname="net.sf.freecol.common.model.ModelMessageTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.ModifierTest" incomplete="true">
        <testcase name="testScope" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testCombinedModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testPercentageModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testHashEquals" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testAdditiveModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testTimeLimits" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testCombinePercentageModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testModifierUnknown" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testCombineMultiplicativeModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testMultiplicativeModifier" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testIncrements" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
        <testcase name="testCombineAdditiveModifiers" classname="net.sf.freecol.common.model.ModifierTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.MonarchTest" incomplete="true">
        <testcase name="testTaxActionChoices" classname="net.sf.freecol.common.model.MonarchTest" incomplete="true"/>
        <testcase name="testSerialize" classname="net.sf.freecol.common.model.MonarchTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.MovementTest" incomplete="true">
        <testcase name="testMoveAlongRoad" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
        <testcase name="testMoveAlongRiver" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
        <testcase name="testMoveFromPlainsToHills" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
        <testcase name="testMoveFromPlainsToPlains" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
        <testcase name="testScoutIndianSettlement" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
        <testcase name="testScoutColony" classname="net.sf.freecol.common.model.MovementTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.NationTypeTest" incomplete="true">
        <testcase name="testSettlementType" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
        <testcase name="testIsREF" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
        <testcase name="testisRef" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
        <testcase name="testAdvantagesThatOnlyApplyToPersons" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
        <testcase name="testHasType" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
        <testcase name="testStartingUnits" classname="net.sf.freecol.common.model.NationTypeTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.PlayerTest" incomplete="true">
        <testcase name="testAddAnotherPlayersUnit" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
        <testcase name="testFreecolPlayers" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
        <testcase name="testTension" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
        <testcase name="testUnits" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
        <testcase name="testClassicPlayers" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true">
        <testcase name="testOtherBuildings" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testRainForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testHorseProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testSavannah" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testHills" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testMarsh" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testOcean" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testSwamp" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testCoatProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testLake" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testHighSeas" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testPrairie" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testWetlandForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testGrassland" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testBroadleafForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testCrossProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testGreatRiver" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testToolsProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testMixedForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testBorealForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testBellProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testClothProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testMountains" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testArctic" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testConiferForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testDesert" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testHammerProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testPlains" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testMusketProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testCigarProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testTundra" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testRumProduction" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testTropicalForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
        <testcase name="testScrubForest" classname="net.sf.freecol.common.model.ProductionTypeTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.RandomRangeTest" incomplete="true">
        <testcase name="testRandomRange" classname="net.sf.freecol.common.model.RandomRangeTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.RoleTest" incomplete="true">
        <testcase name="testRoleComparator" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
        <testcase name="testMilitaryRoles" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
        <testcase name="testGoodsDifference" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
        <testcase name="testCompatibleRoles" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
        <testcase name="testGetRoleWithAbility" classname="net.sf.freecol.common.model.RoleTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.SchoolTest" incomplete="true">
        <testcase name="testEducationOption" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
        <testcase name="testChangeTeachers" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
        <testcase name="testUpgrades" classname="net.sf.freecol.common.model.SchoolTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.ScopeTest" time="0.009">
        <testcase name="testEmptyScope" classname="net.sf.freecol.common.model.ScopeTest" time="0.0"/>
        <testcase name="testMethodScope" classname="net.sf.freecol.common.model.ScopeTest" time="0.0"/>
        <testcase name="testCombinedScope" classname="net.sf.freecol.common.model.ScopeTest" time="0.001"/>
        <testcase name="testTypeScope" classname="net.sf.freecol.common.model.ScopeTest" time="0.0"/>
        <testcase name="testAbilityScope" classname="net.sf.freecol.common.model.ScopeTest" time="0.0"/>
        <testcase name="testEquality" classname="net.sf.freecol.common.model.ScopeTest" time="0.0"/>
        <testcase name="testMatchesNull" classname="net.sf.freecol.common.model.ScopeTest" time="0.0"/>
        <testcase name="testGameObjects" classname="net.sf.freecol.common.model.ScopeTest" time="0.008"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.SerializationTest" incomplete="true">
        <testcase name="testMapAmerica" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
        <testcase name="testSpecification" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
        <testcase name="testValidation" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
        <testcase name="testStringTemplate" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
        <testcase name="testMapAfrica" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
        <testcase name="testMapCaribbean" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
        <testcase name="testDifficulty" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
        <testcase name="testGeneratedLists" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
        <testcase name="testMapAustralia" classname="net.sf.freecol.common.model.SerializationTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.SettlementTest" incomplete="true">
        <testcase name="testColonyClaimsWater" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
        <testcase name="testLineOfSight" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
        <testcase name="testSettlementRadius" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
        <testcase name="testCanImproveUnitMilitaryRole" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
        <testcase name="testSettlementDoesNotClaimWater" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
        <testcase name="testColonyRadius" classname="net.sf.freecol.common.model.SettlementTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.SoLTest" incomplete="true">
        <testcase name="testSoL" classname="net.sf.freecol.common.model.SoLTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.TileImprovementTest" time="0.003">
        <testcase name="testRiverWithExtras" classname="net.sf.freecol.common.model.TileImprovementTest" time="0.002"/>
        <testcase name="testRiverNoExtras" classname="net.sf.freecol.common.model.TileImprovementTest" time="0.0"/>
        <testcase name="testAllFrills" classname="net.sf.freecol.common.model.TileImprovementTest" time="0.0"/>
        <testcase name="testOldStyle" classname="net.sf.freecol.common.model.TileImprovementTest" time="0.001"/>
        <testcase name="testEquality" classname="net.sf.freecol.common.model.TileImprovementTest" time="0.0"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.TileItemContainerTest" incomplete="true">
        <testcase name="testCopyFromWithEveryThing" classname="net.sf.freecol.common.model.TileItemContainerTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.TileTest" time="0.201">
        <testcase name="testTileTypeChangeProduction" classname="net.sf.freecol.common.model.TileTest" time="0.0"/>
        <testcase name="testDefenceModifiers" classname="net.sf.freecol.common.model.TileTest" time="0.001"/>
        <testcase name="testPrimarySecondaryGoods" classname="net.sf.freecol.common.model.TileTest" time="0.021"/>
        <testcase name="testPotential" classname="net.sf.freecol.common.model.TileTest" time="0.004"/>
        <testcase name="testCopy" classname="net.sf.freecol.common.model.TileTest" time="0.012"/>
        <testcase name="testImprovements" classname="net.sf.freecol.common.model.TileTest" time="0.006"/>
        <testcase name="testMinerals" classname="net.sf.freecol.common.model.TileTest" time="0.022"/>
        <testcase name="testMaximumPotential" classname="net.sf.freecol.common.model.TileTest" time="0.016"/>
        <testcase name="testIsTileTypeAllowed" classname="net.sf.freecol.common.model.TileTest" time="0.004"/>
        <testcase name="testGetWorkAmount" classname="net.sf.freecol.common.model.TileTest" time="0.013"/>
        <testcase name="testGetBestDisembarkTile" classname="net.sf.freecol.common.model.TileTest" time="0.027"/>
        <testcase name="testColonyImprovements" classname="net.sf.freecol.common.model.TileTest" time="0.006"/>
        <testcase name="testConiferForest" classname="net.sf.freecol.common.model.TileTest" time="0.058"/>
        <testcase name="testProductionModifiers" classname="net.sf.freecol.common.model.TileTest" time="0.01"/>
        <testcase name="testZIndex" classname="net.sf.freecol.common.model.TileTest" time="0.0"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.TradeRouteTest" incomplete="true">
        <testcase name="testTradeRoute" classname="net.sf.freecol.common.model.TradeRouteTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.UnitTest" incomplete="true">
        <testcase name="testIsColonist" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testUnitLosesExperienceWithRoleChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testUnitAvailability" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testOwnerChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testIndianDies" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testGetMovesAsString" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testCopy" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testDefaultRole" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testMissionary" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testUnitCanBuildColony" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testCarrierOwnerChange" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testTreasureTransportFee" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testFailedAddGoods" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testAttrition" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testGetLineOfSight" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testCanAdd" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
        <testcase name="testUnitLocationAfterBuildingColony" classname="net.sf.freecol.common.model.UnitTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true">
        <testcase name="testEmptyScope" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
        <testcase name="testCreation" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
        <testcase name="testAbilityScope" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
        <testcase name="testEquality" classname="net.sf.freecol.common.model.UnitTypeChangeTest" incomplete="true"/>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.common.utils" incomplete="true">
      <testsuite name="net.sf.freecol.common.utils.UtilsTest" incomplete="true">
        <testcase name="testComparator" classname="net.sf.freecol.common.utils.UtilsTest" incomplete="true"/>
        <testcase name="testGetPermutations" classname="net.sf.freecol.common.utils.UtilsTest" incomplete="true"/>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.common.sound" incomplete="true">
      <testsuite name="net.sf.freecol.common.sound.SoundTest" incomplete="true">
        <testcase name="testSound" classname="net.sf.freecol.common.sound.SoundTest" incomplete="true"/>
        <testcase name="testClassic" classname="net.sf.freecol.common.sound.SoundTest" incomplete="true"/>
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.LimitTest" incomplete="true">
    <testcase name="testSuccessionLimits" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
    <testcase name="testWagonTrainLimit" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
    <testcase name="testOperand" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
    <testcase name="testIndependenceLimits" classname="net.sf.freecol.common.model.LimitTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.CombatTest" incomplete="true">
    <testcase name="testCaptureConvert" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    <testcase name="testGalleonAttackedByPrivateer" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    <testcase name="testDefendColonyWithUnarmedColonist" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    <testcase name="testRegulars" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    <testcase name="testSpanishAgainstNatives" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    <testcase name="testColonistAttackedByVeteran" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    <testcase name="testAttackIgnoresMovementPoints" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    <testcase name="testAttackShipWithLandUnit" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    <testcase name="testDefendColonyWithRevere" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
    <testcase name="testDefendSettlement" classname="net.sf.freecol.common.model.CombatTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true">
    <testcase name="testEquipBravesNotEnoughReqGoods" classname="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true"/>
    <testcase name="testEquipBraves" classname="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.server" incomplete="true">
    <testsuite name="net.sf.freecol.server.SaveLoadTest" incomplete="true">
      <testcase name="testDelayedLoading" classname="net.sf.freecol.server.SaveLoadTest" incomplete="true"/>
      <testcase name="testImmediateLoading" classname="net.sf.freecol.server.SaveLoadTest" incomplete="true"/>
      <testcase name="testImport" classname="net.sf.freecol.server.SaveLoadTest" incomplete="true"/>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.server.ai" incomplete="true">
      <testsuite name="net.sf.freecol.server.ai.AIColonyTest" incomplete="true">
        <testcase name="testBuildersAllocation" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
        <testcase name="testBestDefender" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
        <testcase name="testBuildersAllocNoRawMatTiles" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
        <testcase name="testExpertAllocColonyHasEnoughRawMat" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.ContactTest" incomplete="true">
        <testcase name="testNativeMeetsEuropean" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
        <testcase name="testNativeMeetsColony" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
        <testcase name="testShipMeetsShip" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
        <testcase name="testNativeMeetsNative" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
        <testcase name="testNativeMeetsIndianSettlement" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
        <testcase name="testEuropeanMeetsIndianSettlement" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
        <testcase name="testEuropeanMeetsNative" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true">
        <testcase name="testGetBestWorker" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
        <testcase name="testBestImprovements" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
        <testcase name="testNoBuildRawMatTiles" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
        <testcase name="testReqLumberAndHammersForBuild" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
        <testcase name="testReqOreAndToolsWithEnoughHammersForBuild" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true">
        <testcase name="testIsTargetValidForSeekAndDestroy" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
        <testcase name="testImpossibleConditionsForTargetSelection" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
        <testcase name="testSecureIndianSettlementMissionIgnoreNavalThreat" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
        <testcase name="testSecureIndianSettlementMission" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
        <testcase name="testAssignDefendSettlementMission" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.REFTest" incomplete="true">
        <testcase name="testCreateREFPlayer" classname="net.sf.freecol.server.ai.REFTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true">
        <testcase name="testEquipBravesNotEnoughReqGoods" classname="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true"/>
        <testcase name="testEquipBraves" classname="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.TensionTest" incomplete="true">
        <testcase name="testTension" classname="net.sf.freecol.server.ai.TensionTest" incomplete="true"/>
      </testsuite>
      <testsuite name="Test for net.sf.freecol.server.ai.mission" incomplete="true">
        <testsuite name="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true">
          <testcase name="testImprovementNoLongerValid" classname="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true">
          <testcase name="testIsMissionValid" classname="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.mission.ScoutingMissionTest" incomplete="true">
          <testcase name="testHorsesLost" classname="net.sf.freecol.server.ai.mission.ScoutingMissionTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true">
          <testcase name="testGetNextStopAlreadyAtDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
          <testcase name="testGetDefaultDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
          <testcase name="testWagonTrain" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
          <testcase name="testGetNextStopIsColony" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
          <testcase name="testGetNextStopIsEurope" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
          <testcase name="testTransportMissionInvalidAfterCombatLost" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
        </testsuite>
        <testsuite name="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true">
          <testcase name="testCapturedUnitsLoseMission" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
          <testcase name="testDoNotPursueUnitsInColonies" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
        </testsuite>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.server.control" incomplete="true">
      <testsuite name="net.sf.freecol.server.control.InGameControllerTest" incomplete="true">
        <testcase name="testWarDeclarationAffectsSettlementAlarm" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testArtilleryDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testPeaceTreatyFromWarStance" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testScoutDiesNotLosesEquipment" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testDragoonDemotedByBrave" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testCeaseFireTreaty" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testDeclarationOfWarFromPeace" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testAttackColonyWithVeteran" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testDragoonDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testAddFatherUnits" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testDumpGoods" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testAtackedNavalUnitIsDamaged" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testLaSalle" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testPocahontas" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testPioneerDiesNotLosesEquipment" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testPromotion" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testClearSpecialty" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testPeaceTreatyFromCeaseFireStance" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testUnitLosesExperienceWithWorkChange" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testEquipIndianNotEnoughReqGoods" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testCashInTreasure" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testAddFatherUpgrades" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testUnitTypeChangeOnEnterColony" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testSoldierDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testAttrition" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testUnarmedAttack" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testCarpenterHouseNationalAdvantage" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testCreateMission" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testDoAssignedWorkAmateurAndHardyPioneer" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testEmbark" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testVeteranSoldierDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testLoseColonyDefenceWithRevere" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testBuildingBonus" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testColonistDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testScoutDefeatedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testAddFatherBuildingEvent" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testAttackColonyWithBrave" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
        <testcase name="testEquipIndian" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.server.model" incomplete="true">
      <testsuite name="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true">
        <testcase name="testMoveTeacherOutside" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testTeacherStoresProgress" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testCaseTwoTeachersWithDifferentExp" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testMoveTeacherInside" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testConcurrentUpgrade" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testTeachingOrder" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testTeachPettyCriminalsByMaster" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testTeachingDoublePromotion" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testUniversity" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testTwoTeachersSimple" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testTrackerBug1616384" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testSingleGuyTwoTeachers2" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testCollege" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testSingleGuyTwoTeachers" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testSonsOfLiberty" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testTwoTeachersOfSameKind" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testTeachPettyCriminals" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testProductionBonus" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testPartTraining" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testExpertTeaching" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testColonialRegular" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
        <testcase name="testTeachIndenturedServants" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.model.ServerColonyTest" incomplete="true">
        <testcase name="testEqualFoodProductionConsumptionCase" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
        <testcase name="testDeathByStarvation" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
        <testcase name="testBuildingCompletion" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
        <testcase name="testInvalidCompletion" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
        <testcase name="testAvoidStarvation" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
        <testcase name="testNoBuildingMaterialsProductionWhenBuildingNothing" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
        <testcase name="testFoodConsumption" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
        <testcase name="testLibertyAndImmigration" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true">
        <testcase name="testHorseBreedingNoFoodAvail" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
        <testcase name="testPricing" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
        <testcase name="testHorseBreeding" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
        <testcase name="testFoodConsumption" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true">
        <testcase name="testCheckNoGameOverEnoughMoney" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testCheckGameOver1600Threshold" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testCheckNoGameOverHasColonistInNewWorld" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testHasExploredTile" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testBuyingMakesPricesRaise" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testCheckGameOverUnitsGoingToEurope" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testDutchMarket" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testCheckGameOverNoUnits" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testCheckGameOverUnitsGoingToNewWorld" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testSellingMakesPricesFall" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testMarketRecovery" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testLoadInColony" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
        <testcase name="testLoadInEurope" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.model.ServerUnitTest" incomplete="true">
        <testcase name="testDoAssignedWorkHardyPioneerPlowPlain" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
        <testcase name="testColonyProfitFromEnhancement" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
        <testcase name="testExposeResource" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
        <testcase name="testDoAssignedWorkHardyPioneerBuildRoad" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
        <testcase name="testUnitPromotionWorkingInWorkTile" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
        <testcase name="testUnitGetsExperienceThroughWork" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
        <testcase name="testUnitLumberDelivery" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
        <testcase name="testToggleHorses" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.common.sound" incomplete="true">
    <testsuite name="net.sf.freecol.common.sound.SoundTest" incomplete="true">
      <testcase name="testSound" classname="net.sf.freecol.common.sound.SoundTest" incomplete="true"/>
      <testcase name="testClassic" classname="net.sf.freecol.common.sound.SoundTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true">
    <testcase name="testCapturedUnitsLoseMission" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
    <testcase name="testDoNotPursueUnitsInColonies" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.client.gui" incomplete="true">
    <testsuite name="net.sf.freecol.client.gui.FontTest" incomplete="true">
      <testcase name="testLogicalSerif" classname="net.sf.freecol.client.gui.FontTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.util.test.FreeColTestCase" incomplete="true">
    <testcase name="warning" classname="junit.framework.TestSuite.1" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true">
    <testcase name="testIsMissionValid" classname="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true">
    <testcase name="testImprovementNoLongerValid" classname="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.AIColonyTest" incomplete="true">
    <testcase name="testBuildersAllocation" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
    <testcase name="testBestDefender" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
    <testcase name="testBuildersAllocNoRawMatTiles" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
    <testcase name="testExpertAllocColonyHasEnoughRawMat" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true">
    <testcase name="testGetBestWorker" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
    <testcase name="testBestImprovements" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
    <testcase name="testNoBuildRawMatTiles" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
    <testcase name="testReqLumberAndHammersForBuild" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
    <testcase name="testReqOreAndToolsWithEnoughHammersForBuild" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.ai.REFTest" incomplete="true">
    <testcase name="testCreateREFPlayer" classname="net.sf.freecol.server.ai.REFTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.ColonyTest" incomplete="true">
    <testcase name="testCopyColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    <testcase name="testFoundColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    <testcase name="testTeaParty" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    <testcase name="testAddUnitToColony" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    <testcase name="testCurrentlyBuilding" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    <testcase name="testBuildQueueDoesNotAcceptBuildingDoubles" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    <testcase name="testBuildQueueAcceptsUnitDoubles" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    <testcase name="testUpkeep" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    <testcase name="testUnderSiege" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
    <testcase name="testOccupationWithFood" classname="net.sf.freecol.common.model.ColonyTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true">
    <testcase name="testHorseBreedingNoFoodAvail" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
    <testcase name="testPricing" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
    <testcase name="testHorseBreeding" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
    <testcase name="testFoodConsumption" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.option.OptionTest" incomplete="true">
    <testcase name="testGameOptions" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
    <testcase name="testUnitListOption" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
    <testcase name="testInheritsEditable" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
    <testcase name="testCloneIntegerOption" classname="net.sf.freecol.common.option.OptionTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.RandomRangeTest" incomplete="true">
    <testcase name="testRandomRange" classname="net.sf.freecol.common.model.RandomRangeTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.server.control.InGameControllerTest" incomplete="true">
    <testcase name="testWarDeclarationAffectsSettlementAlarm" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testArtilleryDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testPeaceTreatyFromWarStance" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testScoutDiesNotLosesEquipment" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testDragoonDemotedByBrave" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testCeaseFireTreaty" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testDeclarationOfWarFromPeace" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testAttackColonyWithVeteran" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testDragoonDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testAddFatherUnits" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testDumpGoods" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testAtackedNavalUnitIsDamaged" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testLaSalle" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testPocahontas" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testPioneerDiesNotLosesEquipment" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testPromotion" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testClearSpecialty" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testPeaceTreatyFromCeaseFireStance" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testUnitLosesExperienceWithWorkChange" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testEquipIndianNotEnoughReqGoods" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testCashInTreasure" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testAddFatherUpgrades" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testUnitTypeChangeOnEnterColony" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testSoldierDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testAttrition" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testUnarmedAttack" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testCarpenterHouseNationalAdvantage" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testCreateMission" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testDoAssignedWorkAmateurAndHardyPioneer" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testEmbark" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testVeteranSoldierDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testLoseColonyDefenceWithRevere" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testBuildingBonus" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testColonistDemotedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testScoutDefeatedBySoldier" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testAddFatherBuildingEvent" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testAttackColonyWithBrave" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
    <testcase name="testEquipIndian" classname="net.sf.freecol.server.control.InGameControllerTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.DisasterTest" incomplete="true">
    <testcase name="testDisastersPresent" classname="net.sf.freecol.common.model.DisasterTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.server.ai" incomplete="true">
    <testsuite name="net.sf.freecol.server.ai.AIColonyTest" incomplete="true">
      <testcase name="testBuildersAllocation" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
      <testcase name="testBestDefender" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
      <testcase name="testBuildersAllocNoRawMatTiles" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
      <testcase name="testExpertAllocColonyHasEnoughRawMat" classname="net.sf.freecol.server.ai.AIColonyTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.ContactTest" incomplete="true">
      <testcase name="testNativeMeetsEuropean" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
      <testcase name="testNativeMeetsColony" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
      <testcase name="testShipMeetsShip" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
      <testcase name="testNativeMeetsNative" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
      <testcase name="testNativeMeetsIndianSettlement" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
      <testcase name="testEuropeanMeetsIndianSettlement" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
      <testcase name="testEuropeanMeetsNative" classname="net.sf.freecol.server.ai.ContactTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true">
      <testcase name="testGetBestWorker" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
      <testcase name="testBestImprovements" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
      <testcase name="testNoBuildRawMatTiles" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
      <testcase name="testReqLumberAndHammersForBuild" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
      <testcase name="testReqOreAndToolsWithEnoughHammersForBuild" classname="net.sf.freecol.server.ai.ColonyPlanTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true">
      <testcase name="testIsTargetValidForSeekAndDestroy" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
      <testcase name="testImpossibleConditionsForTargetSelection" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
      <testcase name="testSecureIndianSettlementMissionIgnoreNavalThreat" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
      <testcase name="testSecureIndianSettlementMission" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
      <testcase name="testAssignDefendSettlementMission" classname="net.sf.freecol.server.ai.MissionAssignmentTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.REFTest" incomplete="true">
      <testcase name="testCreateREFPlayer" classname="net.sf.freecol.server.ai.REFTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true">
      <testcase name="testEquipBravesNotEnoughReqGoods" classname="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true"/>
      <testcase name="testEquipBraves" classname="net.sf.freecol.server.ai.StandardAIPlayerTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.TensionTest" time="1.739">
      <testcase name="testTension" classname="net.sf.freecol.server.ai.TensionTest" time="1.739"/>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.server.ai.mission" incomplete="true">
      <testsuite name="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true">
        <testcase name="testImprovementNoLongerValid" classname="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true">
        <testcase name="testIsMissionValid" classname="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.mission.ScoutingMissionTest" incomplete="true">
        <testcase name="testHorsesLost" classname="net.sf.freecol.server.ai.mission.ScoutingMissionTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true">
        <testcase name="testGetNextStopAlreadyAtDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
        <testcase name="testGetDefaultDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
        <testcase name="testWagonTrain" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
        <testcase name="testGetNextStopIsColony" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
        <testcase name="testGetNextStopIsEurope" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
        <testcase name="testTransportMissionInvalidAfterCombatLost" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" incomplete="true"/>
      </testsuite>
      <testsuite name="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true">
        <testcase name="testCapturedUnitsLoseMission" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
        <testcase name="testDoNotPursueUnitsInColonies" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
      </testsuite>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true">
    <testcase name="testAutomaticEquipBraves" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
    <testcase name="testSettlementDoesNotOwnWaterTiles" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
    <testcase name="testTradeGoodsWithSetlement" classname="net.sf.freecol.common.model.IndianSettlementTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.server.ai.mission" incomplete="true">
    <testsuite name="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true">
      <testcase name="testImprovementNoLongerValid" classname="net.sf.freecol.server.ai.mission.PioneeringMissionTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true">
      <testcase name="testIsMissionValid" classname="net.sf.freecol.server.ai.mission.PrivateerMissionTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.mission.ScoutingMissionTest" time="0.473">
      <testcase name="testHorsesLost" classname="net.sf.freecol.server.ai.mission.ScoutingMissionTest" time="0.473"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.mission.TransportMissionTest" time="2.566">
      <testcase name="testGetNextStopAlreadyAtDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" time="0.536"/>
      <testcase name="testGetDefaultDestination" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" time="0.411"/>
      <testcase name="testWagonTrain" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" time="0.405"/>
      <testcase name="testGetNextStopIsColony" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" time="0.371"/>
      <testcase name="testGetNextStopIsEurope" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" time="0.341"/>
      <testcase name="testTransportMissionInvalidAfterCombatLost" classname="net.sf.freecol.server.ai.mission.TransportMissionTest" time="0.502"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true">
      <testcase name="testCapturedUnitsLoseMission" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
      <testcase name="testDoNotPursueUnitsInColonies" classname="net.sf.freecol.server.ai.mission.UnitSeekAndDestroyMissionTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.server.model" incomplete="true">
    <testsuite name="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true">
      <testcase name="testMoveTeacherOutside" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testTeacherStoresProgress" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testCaseTwoTeachersWithDifferentExp" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testMoveTeacherInside" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testConcurrentUpgrade" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testTeachingOrder" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testTeachPettyCriminalsByMaster" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testTeachingDoublePromotion" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testUniversity" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testTwoTeachersSimple" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testTrackerBug1616384" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testSingleGuyTwoTeachers2" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testCollege" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testSingleGuyTwoTeachers" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testSonsOfLiberty" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testTwoTeachersOfSameKind" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testTeachPettyCriminals" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testProductionBonus" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testPartTraining" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testExpertTeaching" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testColonialRegular" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
      <testcase name="testTeachIndenturedServants" classname="net.sf.freecol.server.model.ServerBuildingTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.model.ServerColonyTest" incomplete="true">
      <testcase name="testEqualFoodProductionConsumptionCase" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
      <testcase name="testDeathByStarvation" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
      <testcase name="testBuildingCompletion" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
      <testcase name="testInvalidCompletion" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
      <testcase name="testAvoidStarvation" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
      <testcase name="testNoBuildingMaterialsProductionWhenBuildingNothing" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
      <testcase name="testFoodConsumption" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
      <testcase name="testLibertyAndImmigration" classname="net.sf.freecol.server.model.ServerColonyTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true">
      <testcase name="testHorseBreedingNoFoodAvail" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
      <testcase name="testPricing" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
      <testcase name="testHorseBreeding" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
      <testcase name="testFoodConsumption" classname="net.sf.freecol.server.model.ServerIndianSettlementTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true">
      <testcase name="testCheckNoGameOverEnoughMoney" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testCheckGameOver1600Threshold" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testCheckNoGameOverHasColonistInNewWorld" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testHasExploredTile" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testBuyingMakesPricesRaise" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testCheckGameOverUnitsGoingToEurope" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testDutchMarket" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testCheckGameOverNoUnits" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testCheckGameOverUnitsGoingToNewWorld" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testSellingMakesPricesFall" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testMarketRecovery" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testLoadInColony" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
      <testcase name="testLoadInEurope" classname="net.sf.freecol.server.model.ServerPlayerTest" incomplete="true"/>
    </testsuite>
    <testsuite name="net.sf.freecol.server.model.ServerUnitTest" incomplete="true">
      <testcase name="testDoAssignedWorkHardyPioneerPlowPlain" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
      <testcase name="testColonyProfitFromEnhancement" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
      <testcase name="testExposeResource" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
      <testcase name="testDoAssignedWorkHardyPioneerBuildRoad" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
      <testcase name="testUnitPromotionWorkingInWorkTile" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
      <testcase name="testUnitGetsExperienceThroughWork" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
      <testcase name="testUnitLumberDelivery" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
      <testcase name="testToggleHorses" classname="net.sf.freecol.server.model.ServerUnitTest" incomplete="true"/>
    </testsuite>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.PlayerTest" incomplete="true">
    <testcase name="testAddAnotherPlayersUnit" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
    <testcase name="testFreecolPlayers" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
    <testcase name="testTension" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
    <testcase name="testUnits" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
    <testcase name="testClassicPlayers" classname="net.sf.freecol.common.model.PlayerTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.EuropeTest" incomplete="true">
    <testcase name="testMissionary" classname="net.sf.freecol.common.model.EuropeTest" incomplete="true"/>
  </testsuite>
  <testsuite name="net.sf.freecol.common.model.SpecificationTest" incomplete="true">
    <testcase name="testExtendsDelete" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testLoadMods" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testExtends" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testModifiers" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testLoad" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testNationTypes" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testGetDefaultUnitType" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testGoodsTypes" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testFoundingFathers" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testRequiredAbilitiesForRoles" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testNations" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
    <testcase name="testUnitAbilities" classname="net.sf.freecol.common.model.SpecificationTest" incomplete="true"/>
  </testsuite>
  <testsuite name="Test for net.sf.freecol.client" incomplete="true">
    <testsuite name="Test for net.sf.freecol.client.control" incomplete="true">
      <testsuite name="net.sf.freecol.client.control.MoveTest" incomplete="true">
        <testcase name="testSimpleMove" classname="net.sf.freecol.client.control.MoveTest" incomplete="true"/>
      </testsuite>
    </testsuite>
    <testsuite name="Test for net.sf.freecol.client.gui" time="0.109">
      <testsuite name="net.sf.freecol.client.gui.FontTest" time="0.109">
        <testcase name="testLogicalSerif" classname="net.sf.freecol.client.gui.FontTest" time="0.109"/>
      </testsuite>
    </testsuite>
  </testsuite>
</testrun>
